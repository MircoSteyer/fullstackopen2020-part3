{"version":3,"sources":["components/Search.js","components/AddPersonForm.js","components/PhonebookEntries.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Search","value","onChange","AddPersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","PhonebookEntries","shownPersons","deletePerson","map","person","key","id","name","number","onClick","baseUrl","axios","get","then","response","data","post","put","delete","Notification","messageType","message","successStyle","color","background","fontSize","padding","style","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchValue","setSearchValue","currentMessage","setCurrentMessage","setMessageType","useEffect","personService","filter","toLowerCase","includes","resetForm","MessageTypeEnum","handleMessage","text","duration","setTimeout","event","target","preventDefault","potentiallyExistingPerson","find","window","confirm","updatedPerson","catch","error","newPerson","concat","personInList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.943d3451.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Search = ({value, onChange}) => {\r\n    return (\r\n        <div>\r\n            Search Phonebook: <input value={value} onChange={onChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst AddPersonForm = ({onSubmit, nameValue, nameOnChange, numberValue, numberOnChange}) => {\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div>\r\n                name: <input value={nameValue} onChange={nameOnChange} />\r\n                number: <input value={numberValue} onChange={numberOnChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddPersonForm;","import React from 'react';\r\n\r\nconst PhonebookEntries = ({shownPersons, deletePerson}) => {\r\n\r\n    return (\r\n        <div>\r\n            {shownPersons.map(person => (\r\n                <div key={person.id}>\r\n                    <li>{person.name}: {person.number}</li>\r\n                    <button onClick={deletePerson(person)}>Delete</button>\r\n                </div>\r\n            ))}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PhonebookEntries;","import axios from \"axios\"\r\n\r\nconst baseUrl = `/api/persons`\r\n\r\nconst getPersons = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst addPerson = (person) => {\r\n    const request = axios.post(baseUrl, person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (person) => {\r\n    const request = axios.put(`${baseUrl}/${person.id}`,person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getPersons, addPerson, updatePerson, deletePerson}","import React from 'react';\r\n\r\nconst Notification = ({messageType, message}) => {\r\n\r\n\r\n    const successStyle = {\r\n        color: \"green\",\r\n        background: \"lightgreen\",\r\n        fontSize: 20,\r\n        padding: 10\r\n    }\r\n    const errorStyle = {\r\n        color: \"red\",\r\n        background: \"darkred\",\r\n        fontSize: 20,\r\n        padding: 10\r\n    }\r\n\r\n    if (message === null) return null\r\n\r\n    if (messageType === \"success\") {\r\n        return (\r\n            <div style={successStyle} className={\"notification\"}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (messageType === \"error\") {\r\n        return (\r\n            <div style={errorStyle} className={\"notification\"}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={successStyle} className={\"notification\"}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import React, {useState, useEffect} from 'react';\nimport Search from \"./components/Search\";\nimport AddPersonForm from \"./components/AddPersonForm\";\nimport PhonebookEntries from \"./components/PhonebookEntries\";\nimport personService from \"./services/persons\"\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState(\"\")\n    const [newNumber, setNewNumber] = useState(\"\")\n    const [searchValue, setSearchValue] = useState(\"\")\n    const [currentMessage, setCurrentMessage] = useState(null)\n    const [messageType, setMessageType] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getPersons()\n            .then((response) => {\n                setPersons(response)\n            })\n    }, [])\n\n    let shownPersons = [...persons]\n    if (searchValue) shownPersons = persons.filter(person => person.name.toLowerCase().includes(searchValue.toLowerCase()))\n\n    const handleNewName = (event) => setNewName(event.target.value)\n    const handleNewNumber = (event) => setNewNumber(event.target.value)\n    const handleSearchValue = (event) => setSearchValue(event.target.value)\n\n    const resetForm = () => {\n        setNewName(\"\")\n        setNewNumber(\"\")\n    }\n\n    const MessageTypeEnum = {\n            SUCCESS: \"success\",\n            ERROR: \"error\"\n        }\n\n    const handleMessage = (text, duration, type) => {\n        setMessageType(type)\n        setCurrentMessage(text)\n        setTimeout(() => {\n            setCurrentMessage(null)\n        }, duration)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const potentiallyExistingPerson = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n        if (potentiallyExistingPerson && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n\n            const updatedPerson = {...potentiallyExistingPerson, number: newNumber}\n            personService\n                .updatePerson(updatedPerson)\n                .then(response => setPersons(persons.map(person => person.id === updatedPerson.id ? response : person)))\n                .catch((error) => {\n                    handleMessage(error.response.data.error,5000, MessageTypeEnum.ERROR)\n                })\n\n            resetForm()\n            handleMessage( `Changed the number of ${updatedPerson.name}.`, 5000, MessageTypeEnum.SUCCESS)\n            return\n        }\n\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        }\n\n        personService\n            .addPerson(newPerson)\n            .then(response => {\n                handleMessage(`Added ${newPerson.name} to phonebook.`, 5000, MessageTypeEnum.SUCCESS)\n                setPersons(persons.concat(response))\n            })\n            .catch(error => {\n                handleMessage(error.response.data.error, 5000, MessageTypeEnum.ERROR)\n            })\n        resetForm()\n    }\n    \n    const deletePerson = (person) => () => {\n\n        if (window.confirm(`Delete ${person.name}?`)) {\n            personService\n                .deletePerson(person.id)\n                .then(response => setPersons(persons.filter(personInList => personInList.id !== person.id)))\n            handleMessage(`Successfully deleted ${person.name}.`, 5000)\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification messageType={messageType} message={currentMessage} />\n            <h3>Search</h3>\n            <Search value={searchValue} onChange={handleSearchValue}/>\n\n            <h3>Add Person</h3>\n            <AddPersonForm\n                onSubmit={addPerson}\n                nameValue={newName} nameOnChange={handleNewName}\n                numberValue={newNumber} numberOnChange={handleNewNumber}\n            />\n\n            <h2>Numbers</h2>\n            <PhonebookEntries shownPersons={shownPersons} deletePerson={deletePerson}/>\n\n        </div>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById(\"root\"))\n\n"],"sourceRoot":""}